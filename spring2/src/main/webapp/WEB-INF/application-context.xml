<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
        http://mybatis.org/schema/mybatis-spring https://mybatis.org/schema/mybatis-spring.xsd">

    <!-- bean definitions here -->
    <!-- HikariConfig bean 생성하기 -->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <!-- hikariConfig = new HikariConfig() -->
        <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
        <!-- hikariConfig.setDriverClassName("oracle.jdbc.OracleDriver"); 와 같은 코드-->
        <property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"/>
        <property name="username" value="jspstudy"/>
        <property name="password" value="jspstudy"/>
    </bean>
    
    <!-- HikariDatasource 빈 생성을 위한 설정 -->
    <!-- ds = new HikariDataSource(hikariConfig); -->
    <bean id="ds" class="com.zaxxer.hikari.HikariDataSource">
        <constructor-arg ref="hikariConfig" />
    </bean>
    
    <!-- SqlSessionFactoryBean 생성을 위한 설정:
    데이터 소스를 이용해서 sql 문장을 실행, 결과 처리해서 리턴할 수 있는 객테
     -->
     <bean id="session" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="ds"/>
        <property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
     </bean>
     
     <!-- mybatis-spring 프레임우크에서 생성하고 관리하는 bean을 설정:
        base-package와 그 하위 패키지에 있는 인터페이스들을 구현한 객체를 생성해 줌. -> 그래서 impl 만들 필요가 없는것.
        추상 메서드는 mapper.xml의 id와 동일하게 작성해야함.
        + mapper의 namespace 이름이 인터페이스와 이름이 같아야함
      -->
     <mybatis:scan base-package="com.itwill.spring2.repository" />
     <!-- spring container에서 컴포넌트 빈(예: @service, @component)들을 검색할 기본 패키지 설정
     스프링 컨테이너가 설정된 패키지와 그 하위 패키지를 검색해서
     컴포넌트 애너테이션(@service, @component)이 선언된 클래스의 객체를 생성/관리
     필요한 곳에 의존성을 주입해 줌
      -->
     <context:component-scan base-package="com.itwill.spring2.service" />
</beans>
